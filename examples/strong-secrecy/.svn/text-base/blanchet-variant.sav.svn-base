symbols enc/2, dec/2, aenc/2, adec/2, pk/1, sign/2, ok/0, msg/1, check/2, pair/2, fst/1, snd/1, n1/0, n2/0, n3/0; 

channels c;

private ekB, skA, k;

var X, Y, Z, Z11, Z12, Z21, Z22;

rewrite fst(pair(X, Y)) -> X;
rewrite snd(pair(X, Y)) -> Y;

rewrite adec(aenc(X, pk(Y)), Y) -> X;
rewrite dec(enc(X, Y), Y) -> X;
rewrite check(sign(X,Y),pk(Y)) -> ok;
rewrite msg(sign(X,Y)) -> X;

Setup = out(c, pk(skA)).out(c, pk(ekB)).in(c, Z11).in(c, Z12).in(c, Z21).in(c, Z22).0;

t1 = out(c, aenc(sign(pair(pk(skA),pair(pk(ekB),k)),skA),pk(ekB))).in(c, X).
     [check(adec(X,ekB),pk(skA)) = ok].
     [fst(msg(adec(X,ekB))) = pk(skA)].
     [fst(snd(msg(adec(X,ekB)))) = pk(ekB)].
     out(c, enc(Z11,snd(snd(msg(adec(X,ekB)))))).
     out(c, enc(Z21,k)).0;

t2 = out(c, aenc(sign(pair(pk(skA),pair(pk(ekB),k)),skA),pk(ekB))).in(c, X).
     [check(adec(X,ekB),pk(skA)) = ok].
     [fst(msg(adec(X,ekB))) = pk(skA)].
     [fst(snd(msg(adec(X,ekB)))) = pk(ekB)].
     out(c, enc(Z12,snd(snd(msg(adec(X,ekB)))))).
     out(c, enc(Z22,k)).0;


P1 = sequence Setup,t1;
P2 = sequence Setup,t2;

equivalentct? P1 and P2;
