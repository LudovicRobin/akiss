symbols adec/2, aenc/2, pk/1, fst/1, snd/1, pair/2, a/0, b/0, d/0, kd/0, ok/0;

private na, nb, ka, kb, fk;

channels C;

var x, y, z, xx, yy, x0, y0, z0;

rewrite adec(aenc(xx, pk(yy)), yy) -> xx;
rewrite fst(pair(xx, yy)) -> xx;
rewrite snd(pair(xx, yy)) -> yy;

// AtoD = out(C, aenc(pair(na, a), pk(kd))).in(C, y).[snd(snd(adec(y,ka)))=d].out(C, aenc(fst(snd(adec(y,ka))), pk(kd))).0;

BtoA = in(C, y0).[snd(adec(y0, kb)) = a].out(C, aenc(pair(fst(adec(y0, kb)), pair(nb, b)), pk(ka))).0;

Setup = out(C,pk(ka)).out(C,pk(kb)).0;

//P = AtoD || BtoA;

TeardownReal = out(C,nb).0;

TeardownFake = out(C,fk).0;

PP = Setup :: BtoA :: TeardownReal;

QQ = Setup :: BtoA :: TeardownFake;

equivalentct? PP and QQ;
