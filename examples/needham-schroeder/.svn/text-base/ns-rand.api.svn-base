symbols adec/2, aenc/3, pk/1, fst/1, snd/1, pair/2, a/0, kd/0, ok/0;

private na, nb, ka, kb, fk, r1, r2, r3;

channels C;

var x, y, z, xx, yy, zz, x0, y0, z0;

rewrite adec(aenc(xx, pk(yy), zz), yy) -> xx;
rewrite fst(pair(xx, yy)) -> xx;
rewrite snd(pair(xx, yy)) -> yy;

AtoD = out(C, aenc(pair(na, a), pk(kd), r1)).in(C, y).out(C, aenc(snd(adec(y,ka)), pk(kd), r2)).0;

BtoA = in(C, y0).[snd(adec(y0, kb)) = a].out(C, aenc(pair(fst(adec(y0, kb)), nb), pk(ka), r3)).0;

Setup = out(C,pk(ka)).out(C,pk(kb)).0;

P = interleave AtoD, BtoA;

TeardownReal = out(C,nb).0;

TeardownFake = out(C,fk).0;

PP = sequence Setup, P, TeardownReal;

QQ = sequence Setup, P, TeardownFake;

equivalentct? PP and QQ;
