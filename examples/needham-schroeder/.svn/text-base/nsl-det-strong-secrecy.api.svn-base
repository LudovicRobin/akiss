// This is a fix of the Needham-Schroeder public-key protocol introduced by Gavin Lowe
// in his paper `Breaking and Fixing the Needham-Schroeder Public-Key Protocol Using FDR.' 
//
// Informal description of the protocol :
//
//      1. A -> B : {na,A}_pk(B)   (na fresh)
//      2. B -> A : {nb,na,B}_pk(A)  (nb fresh)
//      3. A -> B : {nb}_{pk(B)}
//
// The protocol does not respect strong secrecy of nb if determnistic encryption is used.
//
symbols adec/2, aenc/2, pk/1, fst/1, snd/1, pair/2, a/0, b/0, d/0, kd/0, ok/0;

private ka, kb;

channels C;

var y, z, xx, yy, x0, y0, z0, s1, s2;

rewrite adec(aenc(xx, pk(yy)), yy) -> xx;
rewrite fst(pair(xx, yy)) -> xx;
rewrite snd(pair(xx, yy)) -> yy;

BtoA1 = in(C, y0).[snd(adec(y0, kb)) = a].[fst(adec(y0, kb))=a].out(C, aenc(pair(fst(adec(y0, kb)), pair(s1, b)), pk(ka))).0;
BtoA2 = in(C, y0).[snd(adec(y0, kb)) = a].[fst(adec(y0, kb))=a].out(C, aenc(pair(fst(adec(y0, kb)), pair(s2, b)), pk(ka))).0;


Setup = in(C,s1).in(C,s2).out(C,pk(ka)).out(C,pk(kb)).in(C,z).0;

PP = sequence Setup, BtoA1;
QQ = sequence Setup, BtoA2;

equivalentct? PP and QQ;
