// RFID protocol KCL07

#set xor;

symbols plus/2, zero/0, h/2, pair/2, fst/1, snd/1;
private idA, idB, r2, r4, kA, kB,ok;
channels C;
var X, Y, Z;

rewrite fst(pair(X,Y)) -> X;
rewrite snd(pair(X,Y)) -> Y;

// We model RFID tags that authenticate with a reader
// in the following way:
//   reader sends a nonce r1
//   tag A sends <idA+r2, h(r1,kA)+r2>

// The protocol does not ensure untraceability: a fake
// reader can initiate two sessions with the same nonce
// and will be able to tell if the two sessions are against
// the same tag or not. Indeed, by xoring the two components
// of the pair one gets idX+h(r1).

// This is almost the real protocol. We do not model the pairing 
// and projections operators but we split the output into two outputs.

TtagA1 = in(C,Y).out(C,pair(plus(idA,r2),plus(h(Y,kA),r2))).0;
TtagA2 = in(C,X).out(C,pair(plus(idA,r4),plus(h(X,kA),r4))).0;
TtagB2 = in(C,X).out(C,pair(plus(idB,r4),plus(h(X,kB),r4))).0;

r1 = TtagA1 :: TtagA2;
r2 = TtagA1 :: TtagB2;

inequivalentct? r1 and r2;
