// simplified version - without pair - of RFID protocol LAK 06
// cf. Survey Attacks on RFID protocols. T. Deursen and S. Radomirovic
// I do not understand the purpose of k0 known by the reader.


// Signature: xor and hash
 
#set xor;

// according to the survey there is no attack on untraceability

// Signature xor and h

symbols plus/2, zero/0, h/1;
private kA, kB, k0, r0, r1, r2;
channels C;
var X,Y,Y2,Z2;

rewrite plus(zero,X) -> X;
rewrite plus(X,X) -> zero;
rewrite plus(X, plus(X,Y)) -> Y;

// The protocol works as follows:
// reader sends a fresh nonce r0
// tag sends <r1, h*r0+r1+k)>
// reader sends h(h(r0+r1+k)+k+r0)
// Then the reader and the tag update their key k with h(k)

// Tinit models an honest session between the reader and tag A that has been eavesdropped
// TtagA2 models a session of Tag A. The key that is used is h(kA)
// TtagB2 models a session of Tag B. The key that is used is kB.

Tinit = out(C,r0).out(C,r1).out(C,h(plus(r0,plus(r1,kA)))).out(C,h(plus(h(plus(r0,plus(r1,kA))),plus(kA,r0)))).0;
TtagA2 = in(C,Y2).out(C,r2).out(C,h(plus(Y2,plus(r2,h(kA))))).in(C,Z2).[Z2=h(plus(h(plus(Y2,plus(r2,h(kA)))),plus(h(kA),r0)))].0;
TtagB2 = in(C,Y2).out(C,r2).out(C,h(plus(Y2,plus(r2,kB)))).in(C,Z2).[Z2=h(plus(h(plus(Y2,plus(r2,kB))),plus(kB,r0)))].0;

r1 = Tinit :: TtagA2;
r2 = Tinit :: TtagB2;

equivalentct? r1 and r2;

// 26/02/2013: AKISS answers "trace equivalent" within 27 sec.

// 25/11/2013: AKISS concludes "trace equivalent" within 38s without the last input on TtagA2 and TtagB2.
// 25/11/2013: AKISS concludes "trace equivalence" within 1m6s (with the last input)
