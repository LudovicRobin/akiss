// Simplified version of RFID protocol YPL 05
// cf. Survey Attacks on RFID protocols. T. Deursen and S. Radomirovic
// The protocol is flawed. We consider two sessions.
// In particular, we do not assume anymore that an honest session has been
// eavesdropped. We model instead an additional session for the tag, and
// a session for the reader. We skip the last input for the additional session
// of the tag.

// Signature: xor and hash

#set xor;

symbols plus/2, zero/0, h/1;
private kA1, kA2, kA, kB1, kB2, kB, r1;
channels C;
var X,Y,Y1,Y2,Z1;

// We model RFID tags that authenticate with a reader
// in the following way:
// Reader and Tag know k1,k2,k and the values k1 and k2 are updated
// after a successfull session.

//   reader sends a nonce r1
//   tag sends h(kA1 + r1 + kA)
//   reader sends h(kA2)
//   both update their keys kA1,kA2 as follows:
//   new kA1 = kA1 + h(kA2)
//   new kA2 = kA2 + h(kA1 + r1 + kA)

// The protocol does not ensure untraceability: after eavesdropping
// one honest session between the reader and the tag A, the attacker knows
// w0 -> r1; w1 -> h(kA1 + r1 + kA); w2 -> h(kA2)
// Then, a fake reader can initiate a session with
// the  nonce r1 + h(kA2)obtained by computing w0 + w2
// and will be able to tell if the two sessions are against
// the same tag or not. Indeed, the previously observed tag
// will respond with h(kA1 + r1 + kA) and this is exactly w1.


// Treader || TtagA1 models the honest session between the reader and tag A.

// TtagB2 models the role of a tag B (without the last input and test)
// TtagA2 models the following session executed by the tag A (without the last
// input and test).
// Note also that we use new kA1 and new kA2 instead of kA1 and KA2 to model
// the fact that the keys have been updated after the first session.

Treader = out(C,r1).in(C,X).[X=h(plus(kA1,plus(r1,kA)))].out(C,h(kA2)).0;
TtagA1 = in(C,Y1).out(C,h(plus(kA1,plus(Y1,kA)))).in(C,Z1).[Z1=h(kA2)].0;

TtagA2 = in(C,Y2).out(C,h(plus(kA1,plus(h(kA2),plus(Y2,kA))))).0;
TtagB2 = in(C,Y2).out(C,h(plus(kB1,plus(Y2,kB)))).0;

r1 = (Treader || TtagA1) :: TtagA2;
r2 = (Treader || TtagA1) :: TtagB2;

not equivalentct? r1 and r2;

// 22/02/2013: AKISS finds the attack - sume - 40 interleavings (around 25 min).

// 25/11/2013: A priori plus que 30 min ! abandon
