// RFID protocol LD'07
// scenario: one honest session followed by TagA (resp. TagB)

#set xor;

symbols h/1, pair/2, fst/1, snd/1;
private k0, k1, k2, r, kB0, kB1, kB2;
channels C, CR;
var X, Y, Z;

rewrite fst(pair(X,Y)) -> X;
rewrite snd(pair(X,Y)) -> Y;


//  Alice-Bob notation
// R knows k0, ki, and k_{i+1}
// T knows alpha = k0+ki
// R --> T: r
// T --> R: h(r+alpha)
// R computes a = ki + k_{i+1} and b = h(a+k0+ki) if alpha = k0+ki
// R --> T: <a,b>
// T updates alpha <-- alpha +a if b = h(a+alpha)

// Tinit models the messages outputted during an honest session between the tag A and the reader
// TtagA models the role of Tag played by A
// TtagB models the role of Tag played by B

Treader = out(CR,r2).in(CR,Z).([Z=k0+k2].out(CR,pair(k2+k3,h(k0+k2))).0 ++ [Z=kB0+kB1].out(CR,pair(kB1+kB2,h(kB0+kB2))).0);
Tinit = out(C,r).out(C,h(r+(k0+k1))).out(C,pair(k1+k2,h(k0+k2))).0;

TtagA = in(C,X).out(C,h(X+(k0+k2))).in(C,Y).0;
TtagB = in(C,X).out(C,h(X+kB0+kB1)).in(C,Y).0;

Psame = Tinit :: (TtagA || Treader);
Pdiff = Tinit :: (TtagB || Treader);

not equivalentct? Psame and Pdiff;

