symbols plus/2, zero/0, h/2;
private idA, idB, r2, r4, kA, kB, ok;
channels C;
var X, Y, Z;

rewrite plus(zero,X) -> X;
rewrite plus(X,X) -> zero;
rewrite plus(X,plus(X,Y)) -> Y;

// We model RFID tags that authenticate with a reader
// in the following way:
//   reader sends a nonce r1
//   tag A sends <idA+r2, h(r1,kA)+r2>
// (in the real protocol there is also a shared key, but it
//  doesn't play an important role here)

// The protocol does not ensure untraceability: a fake
// reader can initiate two sessions with the same nonce
// and will be able to tell if the two sessions are against
// the same tag or not. Indeed, by xoring the two components
// of the pair one gets idX+h(r1).

// This is almost the real protocol. We do not model the pairing 
// and projections operators but we split each output into two outputs.
// We also add the rewriting rule to ensure coherence

TtagA1 = in(C,Y).out(C,plus(idA,r2)). out(C,plus(h(Y,kA),r2)).0;
TtagA2 = in(C,X).out(C,plus(idA,r4)). out(C,plus(h(X,kA),r4)).0;
TtagB2 = in(C,X).out(C,plus(idB,r4)). out(C,plus(h(X,kB),r4)).0;

r1 = TtagA1 :: TtagA2;
r2 = TtagA1 :: TtagB2;

equivalentct? r1 and r2;


// 22/02/2013: AKISS finds the attack within 18 min - noko (cf. rfid-2b.log rfid-2b.dot rfid-2b.dot.svg)

