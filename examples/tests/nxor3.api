#set xor;

// Signature xor and h
symbols plus/2, zero/0, h/2;

private  ida,idb,ka,kb,r1,r2,r3;
channels C;

var X;

rewrite plus(zero,X) -> X;
rewrite plus(X,X) -> zero;


// Equiv OK

 r1 = out(C,plus(ida,r2)).out(C,plus(h(r1,ka),r2)).out(C,plus(ida,r3)).out(C,plus(h(r1,ka),r3));
 s1 = out(C,plus(ida,r2)).out(C,plus(h(r1,ka),r2)).out(C,plus(idb,r3)).out(C,plus(h(r1,kb),r3));
 
inequivalentct? r1 and s1;


// 25/11/2013: AKISS concludes within 6m30s
// The following tests work on r1 but not on s1:
// check_identity([out(C),[out(C),[out(C),[out(C),empty]]]],plus(plus(plus(plus(plus(w0,w1),w2),w3),X796),X796),zero)
// check_identity([out(C),[out(C),[out(C),[out(C),empty]]]],plus(plus(plus(w0,w1),w2),w3),zero)
// check_identity([out(C),[out(C),[out(C),[out(C),empty]]]],plus(plus(plus(plus(plus(plus(plus(w0,w1),w2),w3),X8105),X8103),X8103),X8105),zero)
// check_identity([out(C),[out(C),[out(C),[out(C),empty]]]],plus(plus(plus(plus(plus(plus(plus(w0,w1),w2),w3),X8109),X8111),X8109),X8111),zero)

