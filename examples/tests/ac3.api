#set ac;

symbols plus/2, a/0;

private b, k, ok;
channels C;
var X, Y, Z;

// TODO negative version to check that we can reach after the test
// So far the main problem with this example is termination:
//   X=plus(Y,Z) seems to pose a fundamental problem
//      if it works try it by outputting X on one side and Y+Z on the other
//   X=plus(Y,a) is also a problem and seems more concerning in practice
//   X=plus(Y,a) with a private should be tested too

r1 = in(C,X).in(C,Y).in(C,Z).[X=plus(Y,a)].out(C,ok).0;
s1 = in(C,X).in(C,Y).in(C,Z).[X=plus(Y,a)].out(C,ok).0;

r2 = in(C,X).in(C,Y).in(C,Z).[X=plus(Y,b)].out(C,ok).0;
s2 = in(C,X).in(C,Y).in(C,Z).[X=plus(Y,b)].out(C,ok).0;

r3 = in(C,X).in(C,Y).in(C,Z).[X=plus(Y,a)].out(C,X).0;
s3 = in(C,X).in(C,Y).in(C,Z).[X=plus(Y,a)].out(C,plus(Y,a)).0;

r4 = in(C,X).in(C,Y).in(C,Z).[X=plus(Y,b)].out(C,ok).0;
s4 = in(C,X).in(C,Y).in(C,Z).0;

equivalentct? r1 and s1;
equivalentct? r2 and s2;
equivalentct? r3 and s3;
equivalentct? r4 and s4;
