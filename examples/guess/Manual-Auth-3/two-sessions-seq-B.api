/*
   Manual authentication 3 
*/

symbols ready/0, start/0, accept/0, sh/2, hash/1, bf/2;

private k1,k2;
channels CA,CB,CH;
privchannels OAH,OBH,OHA,OHB;
var X,Y,X1,Y1,XA1,XA2,XA3,XB1,XB2,XB3,XB4,XB5,XH1,XH2,XH3,XH4,
              YA1,YA2,YA3,YB1,YB2,YB3,YB4,YB5,YH1,YH2,YH3,YH4;

rewrite sh(bf(Y, sh(X1,Y1)),Y) -> sh(X1,Y1);
rewrite sh(X,bf(X, sh(X1,Y1))) -> sh(X1,Y1); 

/* 1a.  ->A  : d_A */
/* 1b.  ->B  : d_B */
/* 2.   A->B : hash(k) */
/* 3a.  A=>H : ready */
/* 3b.  B=>H : ready */
/* 4.   H=>A : start */
/* 5.   A=>H : short(d,hash(k)) */
/* 6.   H=>B : short(d,hash(k)) */
/* 7.   A->B : k */
/* 8.   B=>H : accept */
/* 9.   H=>A : accept */

Alice1 = in(CA,XA1).
        out(CA,hash(k1)).
        (out(OAH,ready) ||
        in(OHA,XA2).[XA2=start].
        begin(XA1).
        (out(OAH,sh(XA1,k1)) || out(CA,sh(XA1,k1)).  
        out(CA,k1).
        in(OHA,XA3).[XA3=accept]
        ));

Bob1 = in(CB,XB1).
      in(CB,XB2).
      (out(OBH,ready) ||
      in(OHB,XB4).
      in(CB,XB5).
      [hash(XB5)=XB2].
      [sh(XB1,XB5)=XB4].
      (out(OBH,accept) ||
      end(XB1)
      ));

H1 = (in(OAH,XH1).[XH1=ready] ||
    in(OBH,XH2).[XH2=ready]) ::
    (out(OHA,start) ||
    in(OAH,XH3).
    (out(OHB,XH3) || out(CH,XH3).
    in(OBH,XH4).[XH4=accept]. 
    (out(OHA,accept) || 0
    )));

Alice2 = in(CA,YA1).
        out(CA,hash(k2)).
        (out(OAH,ready) ||
        in(OHA,YA2).[YA2=start].
        begin(YA1).
        (out(OAH,sh(YA1,k2)) || out(CA,sh(YA1,k2)).  
        out(CA,k2).
        in(OHA,YA3).[YA3=accept]
        ));

Bob2 = in(CB,YB1).
      in(CB,YB2).
      (out(OBH,ready) ||
      in(OHB,YB4).
      in(CB,YB5).
      [hash(YB5)=YB2].
      [sh(YB1,YB5)=YB4].
      (out(OBH,accept) ||
      end(YB1)
      ));

H2 = (in(OAH,YH1).[YH1=ready] ||
    in(OBH,YH2).[YH2=ready]) ::
    (out(OHA,start) ||
    in(OAH,YH3).
    (out(OHB,YH3) || out(CH,YH3).
    in(OBH,YH4).[YH4=accept]. 
    (out(OHA,accept) || 0
    )));


P = (Alice1 || Bob1 || H1) >> (Alice2 || Bob2 || H2);

correspondence? P;
