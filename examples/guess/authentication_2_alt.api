/*
   Manual authentication 2
*/

symbols short/2, bruteforce/2, OK/0, pair/2, fst/1, snd/1, READY/0, START/0;

weaknames k;
private m,n;
channels C;
privchannels OAH, OBH, OHB, OHA, OAM, OBM;
var X, Y, X1, X2, Y1, Y2, Yn, x, y, yH, xH, z1H, z2H, Z, z, xA, xB, XA, XB,
YA, YB;

rewrite short(bruteforce(Y, short(X1,Y1)),Y) -> short(X1,Y1);
rewrite short(X,bruteforce(X, short(X1,Y1))) -> short(X1,Y1);
rewrite fst(pair(X,Y)) -> X;
rewrite snd(pair(X,Y)) -> Y;

/* 1a.  ->A : d */
/* 1b.  ->B : d */
/* 2a. A=>H : READY */
/* 3b. B=>H : READY */
/*  4. H=>A : START */
/*  5. A->B : k */
/*  6. A=>H : short(d,k),k */
/*  7. B=>H : short(d,k),k */
/*  H checks if hashes and keys he received are equals */


Alice = in(C,xA).out(OAM,xA).(out(OAH,READY) || out(C,READY).in(OHA,Y).[Y =
START].out(C,k).(out(OAH,pair(k,short(k,xA))) ||
out(C,pair(k,short(k,xA))).in(OHA,Z).[Z=OK].out(OAM,OK)));

Bob =   in(C,xB).out(OBM, xB).(out(OBH,READY) ||
out(C,READY).in(C,y).(out(OBH,pair(y,short(y,xB))) ||
out(C,pair(y,short(y,xB))).in(OHB,z).[z=OK].out(OBM,OK)));

Human = in(OAH,xH).in(OBH,yH).[xH = READY].[yH = READY].(out(OHA,
START) || out(C,START).in(OAH,z1H).in(OBH,z2H).[z1H=z2H].(out(OHB,OK) ||
out(OHA,OK)));

Monitor = in(OAM,XA).in(OBM,XB).(in(OAM,YA).[XA != XB].event ||
in(OBM,YB).[XA != XB].event);

P = (Alice || Bob || Human || Monitor);

guessreachable? P;
