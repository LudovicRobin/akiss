/* this examples illustrates why symbolic trace-to-symbolic trace
equivalence checking is not always complete. */

symbols enc/2,       // models encryption
  dec/2;             //    and decryption

channels C;

private a, b, k, ok;

var X, Y, Z;

rewrite dec(enc(X, Y), Y) -> X;

s = out(C, enc(a, k)).out(C, enc(b, k)).in(C, X).[enc(dec(X, k), k) = X].out(C, ok).0;

r1 = out(C, enc(a, k)).out(C, enc(b, k)).in(C, X).[X = enc(a, k)].out(C, ok).0;

r2 = out(C, enc(a, k)).out(C, enc(b, k)).in(C, X).[X = enc(b, k)].out(C, ok).0;

equivalentct? s and r1, r2; // s is equivalent to r1 and r2, but not to r1
// nor to r2
// as can be seen from the other examples running-example-first-trace.api
// and running-example-second-trace.api

