// RFID protocol KCL07 (fixed version to guarantee unlinkability)
// Authentication property
// P and Q are similar. They only differ by the fact that
// Q will emit an additional message "zero" if it executes until the end.
// If such a message equivalence will not hold and this will witness an authentication problem
// since reader will be able to execute (apparently with tag A) whereas tagA did not start any session.

#set xor;

symbols h/2, pair/2, fst/1, snd/1;
private idA, idB, r1, r2, r3, r4, kA, kB;
channels C, CT, CR;
var W, X, Y, Z;

rewrite fst(pair(X,Y)) -> X;
rewrite snd(pair(X,Y)) -> Y;

//  Alice-Bob notation
//   R --> T: r1
//   T --> R: <idA+r2, h(r1,kA+r2)>


// Tinit models the two first messages outputted during an honest session between
// the reader and tag A. We assume that the reader does not reached the end of
// the session and therefore it does not update the key.
// Treader models a session of reader talking to Tag A. The key that is used is kA
// We would like to know whether it is possible for the reader to reach the end
// of the session whereas TagA has not yet started.

Tinit = out(C,r1).out(C,pair(idA+r2,h(r1,kA+r2))).0;

Treader = out(CR,r3).in(CR,Z).[snd(Z)=h(r3,kA+idA+fst(Z))].0;

// TtagA = in(CT,X).out(CT,pair(idA+r4,h(X,kA+r4))).0;
// TtagB = in(CT,X).out(CT,pair(idB+r4,h(X,kB+r4))).0;

P = Tinit :: Treader :: out(CR,0);
Q = Tinit :: Treader;

includedct? P in Q;
