// RFID protocol AD'11


#set xor;

symbols h/1,pair/2, fst/1, snd/1, quad/4, thrd/1,frth/1,incr/1,decr/1;
private  T, TC , TB, TD,TE, n, m,  kA, kB, k0, r0, r1, r2, r3;
channels C, CR, CT;
var W,X,Y,Z;

rewrite fst(pair(X,Y)) -> X;
rewrite snd(pair(X,Y)) -> Y;
rewrite fst(quad(W,X,Y,Z)) -> W;
rewrite snd(quad(W,X,Y,Z)) -> X;
rewrite thrd(quad(W,X,Y,Z)) -> Y;
rewrite frth(quad(W,X,Y,Z)) -> Z;
rewrite decr(incr(X)) -> X;


//  Alice-Bob notation
// R --> T: r1
// T --> R: <T, h(k,n) , h(<(k,T,r1,h(k,n))>)>
// R verifies 
// R --> T: <TC + h(<(k,T,h(<(k,T,r1,h(k,n))>))>), h(<(k,r3,TC)>)>
// R and T update their key T with TC

Tinit = out(C,r1).out(C,quad(T , h(pair(kA,n)) , h(quad(kA,T,r1,h(pair(kA,n)))) , 0)).
out(C,pair(TC + h(quad(kA , T , h(quad(kA,T,r1,h(pair(kA,n)))),0)), 
h(quad(kA, h(quad(kA,T,r1,h(pair(kA,n)))),TC , 0)))).0;

Treader = out(CR,r2).in(CR,Z).
([fst(Z)=TC].[thrd(Z)=h(quad(kA,TC,r2,snd(Z)))]
.out(CR,pair(TD + h(quad(kA,TC,h(quad(kA,TC,r2,h(pair(kA,incr(n))))),0)),
 h(quad(kA , h(quad(kA,TC,r2,h(pair(kA,incr(n))))) , TD , 0))))
 ++ 
[fst(Z)=TB].[thrd(Z)=h(quad(kB , TB , r2 , snd(Z)))]
.out(CR,pair(TE + h(quad(kB , TB , h(quad(kB,TB,r2,h(pair(kB,m)))) , 0)), 
h(quad(kB , h(quad(kB,TB,r2,h(pair(kA,m)))), TE , 0))))
);

TtagA = in(C,X).out(C,quad(TC , h(pair(kA,incr(n))) , h(quad(kA,TC,X,h(pair(kA,incr(n))))), 0)).0;
TtagB = in(C,X).out(C,quad(TB , h(pair(kB,m)) , h(quad(kB,TB,X,h(pair(kB,m)))), 0)).0;

Psame = Tinit :: (TtagA || Treader);
Pdiff = Tinit :: (TtagB || Treader);


includedft? Psame in Pdiff;

