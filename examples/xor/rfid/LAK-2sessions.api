// RFID protocol LAK'06

#set xor;

symbols h/1,pair/2, fst/1, snd/1;
private kA, kB, k0, r0, r1, r2, r3, r02, r12,r22,r32;
channels C, CR, CT;
var X,Y,Z,X2,Y2,Z2;

rewrite fst(pair(X,Y)) -> X;
rewrite snd(pair(X,Y)) -> Y;


//  Alice-Bob notation
// R --> T: r0
// T --> R: <r1, h(r0+r1+k)>
// R --> T: h(h(r0+r1+k)+k+r0)
// R and T update their key k with h(k)

Tinit = out(C,r0).out(C,pair(r1,h(r0+(r1+kA)))).out(C,h(h(r0+r1+kA)+kA+r0)).0;

Treader = out(CR,r2).in(CR,Z).([snd(Z)=h(r2+fst(Z)+h(kA))].out(CR,h(snd(Z)+h(kA)+r2)) ++ [snd(Z)=h(r2+fst(Z)+kB)].out(CR,h(snd(Z)+kB+r2)));

TtagA = in(C,X).out(C,pair(r3,h(X+r2+h(kA)))).0;
TtagB = in(C,X).out(C,pair(r3,h(X+r2+kB))).0;

Treader2 = out(CR,r22).in(CR,Z2).([snd(Z2)=h(r22+fst(Z2)+h(kA))].out(CR,h(snd(Z2)+h(kA)+r22)) ++ [snd(Z2)=h(r22+fst(Z2)+kB)].out(CR,h(snd(Z2)+kB+r22)));

TtagA2 = in(C,X2).out(C,pair(r32,h(X2+r22+h(kA)))).0;
TtagB2 = in(C,X2).out(C,pair(r32,h(X2+r22+kB))).0;

Psame = Tinit :: ((TtagA || Treader) >> (TtagA2 || Treader2));
Pdiff = Tinit :: ((TtagB || Treader) >> (TtagB2 || Treader2));


includedft? Psame in Pdiff;
