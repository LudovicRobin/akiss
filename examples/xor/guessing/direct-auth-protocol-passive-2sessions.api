// Direct Authentication Protocol as decribed in Gong's paper (1993)
// Protecting Poorly Chosen Secrets from Guessing Attacks (page 13)

// A -> B: ra, {pubA}pw
// B -> A: {B, A, nb1, nb2, cb, {ra}pw}pubA
// A -> B: {nb1, k + nb2}pw
// B -> A: {f1(ra),rb}k
// A -> B: {f2(rb)}k

// pw is a poorly choosen secret between A and B

#set xor;
#set por;


symbols  senc/2, sdec/2, pair/2, fst/1, snd/1, f1/1, f2/1, aenc/2, adec/2, pk/1, A/0, B/0;
private pw, nb1,nb2,nbB1,nbB2, ra, rb, raB, rbB, pfresh, ska, cb, k;
channels C;
var X, Y, X1, X2, X3, X4, X5, Z1, Z2, Z3, Z4, Z5, XB1,XB2,XB3,XB4,XB5,ZB1,ZB2,ZB3,ZB4,ZB5;

rewrite adec(aenc(X,pk(Y)),Y) -> X;
rewrite senc(sdec(X,Y),Y) -> X;
rewrite sdec(senc(X,Y),Y) -> X;
rewrite fst(pair(X,Y)) -> X;
rewrite snd(pair(X,Y)) -> Y;
rewrite pair(fst(X),snd(X)) ->X;

P =
  let X1 = pair(ra,senc(pk(ska),pw)) in out(C,X1).
  let X2 = aenc(pair(B,pair(A,pair(nb1,pair(nb2,pair(cb,senc(ra,pw)))))),pk(ska)) in out(C,X2).
  let X3 = senc(pair(nb1, k+nb2),pw) in out(C,X3).
  let X4 = senc(pair(f1(ra),rb),k) in out(C,X4).
  let X5 = senc(f2(rb),k) in out(C,X5).0;

Q =
  let Z1 = pair(ra,senc(pk(ska),pw)) in out(C,Z1).
  let Z2 = aenc(pair(B,pair(A,pair(nb1,pair(nb2,pair(cb,senc(ra,pw)))))),pk(ska)) in out(C,Z2).
  let Z3 = senc(pair(nb1, k+nb2),pw) in out(C,Z3).
  let Z4 = senc(pair(f1(ra),rb),k) in out(C,Z4).
  let Z5 = senc(f2(rb),k) in out(C,Z5).0;
	
PB =
  let XB1 = pair(raB,senc(pk(ska),pw)) in out(C,XB1).
  let XB2 = aenc(pair(B,pair(A,pair(nbB1,pair(nbB2,pair(cb,senc(raB,pw)))))),pk(ska)) in out(C,XB2).
  let XB3 = senc(pair(nbB1, k+nbB2),pw) in out(C,XB3).
  let XB4 = senc(pair(f1(raB),rbB),k) in out(C,XB4).
  let XB5 = senc(f2(rbB),k) in out(C,XB5).0;

QB =
  let ZB1 = pair(raB,senc(pk(ska),pw)) in out(C,ZB1).
  let ZB2 = aenc(pair(B,pair(A,pair(nbB1,pair(nbB2,pair(cb,senc(raB,pw)))))),pk(ska)) in out(C,ZB2).
  let ZB3 = senc(pair(nbB1, k+nbB2),pw) in out(C,ZB3).
  let ZB4 = senc(pair(f1(raB),rbB),k) in out(C,ZB4).
  let ZB5 = senc(f2(rbB),k) in out(C,ZB5).0;
  
Pw = (Q || P || QB || PB >> out(C,pw));

Pfresh = (Q || P || QB || PB >>out(C,pfresh));

includedct? Pw in Pfresh;
